Полнодисковое шифрование.
Шифруется диск, доступ к которому осуществляется через файловый сервер в юзерспейсе. Используется шифрование AES в режиме XTS с помошью библиотеки libtomcrypt.
При сборке системы в fs/fsformat.c последним этапом запрашивается пароль, генерируется случайная соль для ключа (записывается в нулевой сектор диска) 
и образ диска шифруется посекторно. 
При запуске системы загрузчик запрашивает пароль, передает его в систему через LoaderParams, затем файловый сервер получает пароль
с помощью системного вызова. Из пароля и соли на диске генерируется ключ.
В обработчике pgfault - единственном месте, где происходит чтение - страница сразу расшифровывается, 
в функции flush_block() - зашифровывается перед записью на диск.

Для тестирования достаточно ввести неправильный пароль - файловый сервер выдаст ошибку при запуске.
Также можно посмотреть hexdump -C obj/fs/fs.img и убедиться, что читаемых символов там нет, хотя на диске хранятся несколько plaintext файлов.
Можно также создать новые файлы и убедиться, что они также не видны в hexdump, но видны после перезагрузки системы (с правильным паролем, конечно).
Также в Bootloader.c в функции ConsoleGetPassword() оставлен комментарий, который можно раскомментировать и записать заранее заданный пароль. Тогда сборка
пройдет тесты 10-12 лабораторных (во время тестирования надо несколько раз ввести этот же пароль), что показывает, что шифрование осуществляется прозрачно
и не влияет на работу остальных компонентов системы.